AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app
  
Globals:
  Function:
    Timeout: 3

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - staging
      - prod
    Description: Environment of this stack of resources

Mappings:
  ResourcesName:
    dev:
      tableName: PaymentDev
      tableNameArn: BookingTripDevArn
      bookingTableName: BookingTripDev
      arn: UserPoolArnDev
    staging:
      tableName: PaymentStaging
      tableNameArn: BookingTripStagingArn
      bookingTableName: BookingTripStaging
      arn: UserPoolArnStaging
    prod:
      tableName: PaymentProd
      tableNameArn: BookingTripProdArn
      bookingTableName: BookingTripProd
      arn: UserPoolArnProd

Resources:
  PaymentApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Environment
      TracingEnabled: true
      Cors: "'*'"
      Auth:
        DefaultAuthorizer: MyCognitoAuthorizer
        Authorizers:
          MyCognitoAuthorizer:
            UserPoolArn: 
              Fn::ImportValue: !FindInMap [ResourcesName, !Ref Environment, arn]

  Payment:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.paymentHandler
      Runtime: nodejs12.x
      CodeUri: payment/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !FindInMap [ResourcesName, !Ref Environment, tableName]
        - DynamoDBCrudPolicy:
            TableName: !FindInMap [ResourcesName, !Ref Environment, bookingTableName]
      Environment:
        Variables:
          TABLE_NAME: !FindInMap [ResourcesName, !Ref Environment, tableName]
          BOOKING_TABLE_NAME: !FindInMap [ResourcesName, !Ref Environment, bookingTableName]
      Events:
        CreatePaymentAPI:
          Type: Api
          Properties:
            Path: /payment
            Method: POST
            RestApiId: !Ref PaymentApi
        UpdatePaymentAPI:
          Type: Api
          Properties:
            Path: /payment/{paymentId}
            Method: ANY
            RestApiId: !Ref PaymentApi

  PaymentTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !FindInMap [ResourcesName, !Ref Environment, tableName]
      AttributeDefinitions:
        - AttributeName: paymentId
          AttributeType: S
      KeySchema:
        - AttributeName: paymentId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
          StreamViewType: NEW_IMAGE

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  PaymentApi:
    Description: "API Gateway endpoint URL for ${Environment} stage for payment Trip function"
    Value: !Sub "https://${PaymentApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/payment/"
  PaymentTable:
    Description: "payment Trip Lambda Function ARN"
    Value: !GetAtt Payment.Arn
  PaymentTableStream:
    Description: "Booking Trip Dynamo DB Table Stream"
    Value: !GetAtt Payment.StreamArn
    Export: 
      Name: !FindInMap [ResourcesName, !Ref Environment, tableNameArn]
  PaymentIamRole:
    Description: "Implicit IAM Role created for payment Trip function"
    Value: !GetAtt PaymentRole.Arn
